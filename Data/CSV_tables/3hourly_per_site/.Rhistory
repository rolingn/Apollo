library(dplyr)
library(tidyr)
library(lubridate)
library(emmeans)
library(tidyverse)
library(ggplot2)
library(plotly)
library(GGally)
library(gratia)
library(mgcv)
library(mgcViz)
library(corrplot)
factor_wizzard <- function(df, variables){
for (variable in variables){
df[[variable]] <- as.factor(df[[variable]])  # Correct way to reference column names
}
return(df)  # Return modified dataframe
}
setwd("/Volumes/Apollo/Davos/Data/CSV_tables/smet_as_csv_3hour")
WFJ_low_weather <- read.csv("weissfluhjoch_low.csv", sep = ",") %>%
mutate(timestamp = as.POSIXct(timestamp))
WFJ_mid_weather <- read.csv("weissfluhjoch_mid.csv", sep = ",") %>%
mutate(timestamp = as.POSIXct(timestamp))
setwd("/Volumes/Apollo/Davos/Data/CSV_tables/3hourly_per_site")
WFJ_low <- read.csv("weissfluhjoch_low.csv", sep = ",") %>%
mutate(timestamp = as.POSIXct(timestamp))
WFJ_mid <- read.csv("weissfluhjoch_mid.csv", sep = ",") %>%
mutate(timestamp = as.POSIXct(timestamp))
WFJ_low <- cbind(WFJ_low_weather, WFJ_low[ , !(names(WFJ_low) %in% "timestamp")]) %>%
mutate(site = "Weissfluhjoch", position = "Lower")
WFJ_mid <- cbind(WFJ_mid_weather, WFJ_mid[ , !(names(WFJ_mid) %in% "timestamp")]) %>%
mutate(site = "Jatzhorn", position = "Middle") # <---------------------------- HIER SITE WIEDER ÄNDERN NACH PROTOTYPING
df <- rbind(WFJ_low, WFJ_mid)
rm(WFJ_low_weather, WFJ_mid_weather)
df <- factor_wizzard(df, c("LED", "site", "position"))
rm(factor_wizzard)
View(df)
View(df)
m_full <- gam(hourly_abundance ~ s(PSUM) + te(PSUM, site, LED, bs = c("cr", "fs", "fs")) +
s(RH) + te(RH, site, LED, bs = c("cr", "fs", "fs")) +
s(RSWR)+ te(RSWR, site, LED, bs = c("cr", "fs", "fs")) +
s(TA) + te(TA, site, LED, bs = c("cr", "fs", "fs")) +
s(TSG) + te(TSG, site, LED, bs = c("cr", "fs", "fs")) +
s(VW) + te(VW, site, LED, bs = c("cr", "fs", "fs")) +
s(Hour, k = 8) + te(Hour, site, LED, bs = c("cr", "fs", "fs")) +
LED + site
, family = nb(link = "log"), data = df, select = TRUE, method = "REML")
m <- gam(hourly_abundance ~ te(PSUM, site, LED, bs = c("cr", "fs", "fs")) +
te(RH, site, LED, bs = c("cr", "fs", "fs")) +
s(RSWR)+ te(RSWR, site, LED, bs = c("cr", "fs", "fs")) +
s(TA) + te(TA, site, LED, bs = c("cr", "fs", "fs")) +
s(TSG) + te(TSG, site, LED, bs = c("cr", "fs", "fs")) +
s(VW) +
s(Hour, k = 8) + te(Hour, site, LED, bs = c("cr", "fs", "fs")) +
LED + site,
family = nb(link = "log"), data = df,
select = TRUE, method = "REML") # <--- use Gamma instead of poisson if modeling biomass
m2 <- gam(hourly_abundance ~ te(PSUM, site, LED, bs = c("cr", "fs", "fs")) +
te(RH, site, LED, bs = c("cr", "fs", "fs")) +
s(RSWR)+ te(RSWR, site, LED, bs = c("cr", "fs", "fs")) +
s(TA) + te(TA, site, LED, bs = c("cr", "fs", "fs")) +
s(TSG) +
s(VW) +
s(Hour, k = 8, bs = "cr") + #s(Hour, by = site, k = 8) + s(Hour, by = LED, k = 8) +
LED + site
, family = nb(link = "log"), data = df, select = TRUE, method = "REML")
m1 <- gam(hourly_abundance ~ te(PSUM, site, LED, bs = c("cr", "fs", "fs")) +
te(RH, site, LED, bs = c("cr", "fs", "fs")) +
s(RSWR, k = 20)+ te(RSWR, site, LED, bs = c("cr", "fs", "fs")) +
s(TA, k = 25) + te(TA, site, LED, bs = c("cr", "fs", "fs")) +
s(TSG, k = 10) +
s(VW, k = 10) +
s(Hour, k = 8, bs = "fs") +
te(Hour, site, LED, bs = c("cr", "fs", "fs")) +
#s(Hour, by = site) + s(Hour, by = LED) +
LED + site
, family = nb(link = "log"), data = df, select = TRUE, method = "REML")
ggplot(df, aes(hourly_abundance, timestamp)) +
geom_line()
ggplot(df, aes(timestamp, hourly_abundance)) +
geom_line()
ggplot(df, aes(timestamp, hourly_abundance)) +
geom_line() +
facet_wrap(~site)
ggplot(df, aes(timestamp, hourly_abundance)) +
geom_line() +
facet_grid(~site)
ggplot(df, aes(timestamp, hourly_abundance)) +
geom_line() +
facet_grid(~site, cols = 1)
ggplot(df, aes(timestamp, hourly_abundance)) +
geom_line() +
facet_wrap(~site, cols = 1)
ggplot(df, aes(timestamp, hourly_abundance)) +
geom_line() +
facet_wrap(~site, ncol = 1)
View(df)
summary(m_full)
ggplot(df) +
geom_line(aes(timestamp, hourly_abundance)) +
geom_line(aes(timestamp, TA))
ggplot(df) +
geom_line(aes(timestamp, hourly_abundance)) +
geom_line(aes(timestamp, TA)) +
facet_wrap(~site, ncol = 1)
ggplot(df) +
geom_line(aes(timestamp, hourly_abundance)) +
geom_line(aes(timestamp, TA), col = "blue") +
facet_wrap(~site, ncol = 1)
df$Fitted <- fitted(m1)
p <- ggplot(df, aes(x = timestamp)) +
geom_line(aes(y = hourly_abundance, color = "Observed")) +
geom_line(aes(y = Fitted, color = "Fitted")) +
labs(x = "Time", y = "Hourly Abundance") +
scale_color_manual("", values = c("Observed" = "black", "Fitted" = "blue")) +
theme_minimal() +
facet_wrap(~site)
ggplotly(p)
draw(m1)
factor_wizzard <- function(df, variables){
for (variable in variables){
df[[variable]] <- as.factor(df[[variable]])  # Correct way to reference column names
}
return(df)  # Return modified dataframe
}
setwd("/Volumes/Apollo/Davos/Data/CSV_tables/smet_as_csv_3hour")
WFJ_low_weather <- read.csv("weissfluhjoch_low.csv", sep = ",") %>%
mutate(timestamp = as.POSIXct(timestamp)) %>%
mutate(day_of_year = yday(timestamp))
WFJ_mid_weather <- read.csv("weissfluhjoch_mid.csv", sep = ",") %>%
mutate(timestamp = as.POSIXct(timestamp)) %>%
mutate(day_of_year = yday(timestamp))
View(WFJ_low_weather)
setwd("/Volumes/Apollo/Davos/Data/CSV_tables/3hourly_per_site")
WFJ_low <- read.csv("weissfluhjoch_low.csv", sep = ",") %>%
mutate(timestamp = as.POSIXct(timestamp))
WFJ_mid <- read.csv("weissfluhjoch_mid.csv", sep = ",") %>%
mutate(timestamp = as.POSIXct(timestamp))
WFJ_low <- cbind(WFJ_low_weather, WFJ_low[ , !(names(WFJ_low) %in% "timestamp")]) %>%
mutate(site = "Weissfluhjoch", position = "Lower")
WFJ_mid <- cbind(WFJ_mid_weather, WFJ_mid[ , !(names(WFJ_mid) %in% "timestamp")]) %>%
mutate(site = "Jatzhorn", position = "Middle") # <---------------------------- HIER SITE WIEDER ÄNDERN NACH PROTOTYPING
df <- rbind(WFJ_low, WFJ_mid)
rm(WFJ_low_weather, WFJ_mid_weather)
df <- factor_wizzard(df, c("LED", "site", "position"))
rm(factor_wizzard)
ggplot(df) +
geom_line(aes(timestamp, hourly_abundance)) +
geom_line(aes(timestamp, TA), col = "blue") +
facet_wrap(~site, ncol = 1)
View(df)
factor_wizzard <- function(df, variables){
for (variable in variables){
df[[variable]] <- as.factor(df[[variable]])  # Correct way to reference column names
}
return(df)  # Return modified dataframe
}
setwd("/Volumes/Apollo/Davos/Data/CSV_tables/smet_as_csv_3hour")
WFJ_low_weather <- read.csv("weissfluhjoch_low.csv", sep = ",") %>%
mutate(timestamp = as.POSIXct(timestamp)) %>%
mutate(day_of_year = yday(timestamp))
WFJ_mid_weather <- read.csv("weissfluhjoch_mid.csv", sep = ",") %>%
mutate(timestamp = as.POSIXct(timestamp)) %>%
mutate(day_of_year = yday(timestamp))
setwd("/Volumes/Apollo/Davos/Data/CSV_tables/3hourly_per_site")
WFJ_low <- read.csv("weissfluhjoch_low.csv", sep = ",") %>%
mutate(timestamp = as.POSIXct(timestamp))
WFJ_mid <- read.csv("weissfluhjoch_mid.csv", sep = ",") %>%
mutate(timestamp = as.POSIXct(timestamp))
WFJ_low <- cbind(WFJ_low_weather, WFJ_low[ , !(names(WFJ_low) %in% "timestamp")]) %>%
mutate(site = "Weissfluhjoch", position = "Lower")
WFJ_mid <- cbind(WFJ_mid_weather, WFJ_mid[ , !(names(WFJ_mid) %in% "timestamp")]) %>%
mutate(site = "Jatzhorn", position = "Middle") # <---------------------------- HIER SITE WIEDER ÄNDERN NACH PROTOTYPING
df <- rbind(WFJ_low, WFJ_mid) %>%
select(-Month, -Day)
rm(WFJ_low_weather, WFJ_mid_weather)
df <- factor_wizzard(df, c("LED", "site", "position"))
rm(factor_wizzard)
View(df)
m_full1 <- gam(hourly_abundance ~ s(PSUM, by = LED) +
s(RH, by = LED) +
s(RSWR, by = LED) +
s(TA, by = LED) +
s(TSG, by = LED) +
s(VW, by = LED) +
s(Hour, k = 8, by = LED) +
s(day_of_year, by = LED)
s(site, bs = "re") +
m_full1 <- gam(hourly_abundance ~ s(PSUM, by = LED) +
s(RH, by = LED) +
s(RSWR, by = LED) +
s(TA, by = LED) +
s(TSG, by = LED) +
s(VW, by = LED) +
s(Hour, k = 8, by = LED) +
s(day_of_year, by = LED) +
s(site, bs = "re") +
LED + site
, family = nb(link = "log"), data = df, select = TRUE, method = "REML")
summary(m_full1)
draw(m_full1)
m_full1 <- gam(hourly_abundance ~ s(PSUM, by = LED) +
s(RH, by = LED) +
s(RSWR, by = LED) +
s(TA, by = LED) +
s(TSG, by = LED) +
s(VW, by = LED) +
s(Hour, k = 8, by = LED) +
#s(day_of_year, by = LED) +
s(site, bs = "re") +
LED + site
, family = nb(link = "log"), data = df, select = TRUE, method = "REML")
summary(m_full1)
m_full1 <- gam(hourly_abundance ~ s(PSUM, by = LED) +
#s(RH, by = LED) +
s(RSWR, by = LED) +
s(TA, by = LED) +
s(TSG, by = LED) +
s(VW, by = LED) +
s(Hour, k = 8, by = LED) +
s(day_of_year, by = LED) +
s(site, bs = "re") +
LED + site
, family = nb(link = "log"), data = df, select = TRUE, method = "REML")
summary(m_full1)
m_full1 <- gam(hourly_abundance ~ #s(PSUM, by = LED) +
#s(RH, by = LED) +
s(RSWR, by = LED) +
s(TA, by = LED) +
s(TSG, by = LED) +
s(VW, by = LED) +
s(Hour, k = 8, by = LED) +
s(day_of_year, by = LED) +
s(site, bs = "re") +
LED + site
, family = nb(link = "log"), data = df, select = TRUE, method = "REML")
summary(m_full1)
m_full1 <- gam(hourly_abundance ~ #s(PSUM, by = LED) +
#s(RH, by = LED) +
s(RSWR) +
s(TA, by = LED) +
s(TSG, by = LED) +
s(VW, by = LED) +
s(Hour, k = 8) +
s(day_of_year, by = LED) +
s(site, bs = "re") +
LED + site
, family = nb(link = "log"), data = df, select = TRUE, method = "REML")
summary(m_full1)
m_full1 <- gam(hourly_abundance ~ #s(PSUM, by = LED) +
#s(RH, by = LED) +
s(RSWR) +
s(TA, by = LED) +
s(TSG, by = LED) +
s(VW, by = LED) +
s(Hour, k = 8) +
s(day_of_year, by = LED) +
#s(site, bs = "re") +
LED + site
, family = nb(link = "log"), data = df, select = TRUE, method = "REML")
summary(m_full1)
draw(m_full1)
m_full1 <- gam(hourly_abundance ~ #s(PSUM, by = LED) +
#s(RH, by = LED) +
s(RSWR) +
#s(TA, by = LED) +
s(TSG, by = LED) +
s(VW, by = LED) +
s(Hour, k = 8) +
s(day_of_year, by = LED) +
#s(site, bs = "re") +
LED + site
, family = nb(link = "log"), data = df, select = TRUE, method = "REML")
summary(m_full1)
draw(m_full1)
m_full1 <- gam(hourly_abundance ~ #s(PSUM, by = LED) +
#s(RH, by = LED) +
s(RSWR) +
#s(TA, by = LED) +
s(TSG, by = LED) +
s(VW, by = LED) +
s(Hour, k = 8) +
s(day_of_year, by = LED, bs = "re") +
#s(site, bs = "re") +
LED + site
, family = nb(link = "log"), data = df, select = TRUE, method = "REML")
summary(m_full1)
m_full1 <- gam(hourly_abundance ~ #s(PSUM, by = LED) +
#s(RH, by = LED) +
s(RSWR) +
#s(TA, by = LED) +
s(TSG, by = LED) +
s(VW, by = LED) +
s(Hour, k = 8) +
s(day_of_year, bs = "re") +
#s(site, bs = "re") +
LED + site
, family = nb(link = "log"), data = df, select = TRUE, method = "REML")
gc()
m_full1 <- gam(hourly_abundance ~ #s(PSUM, by = LED) +
#s(RH, by = LED) +
s(RSWR) +
#s(TA, by = LED) +
s(TSG, by = LED) +
s(VW, by = LED) +
s(Hour, k = 8) +
s(day_of_year, bs = "re") +
#s(site, bs = "re") +
LED + site
, family = nb(link = "log"), data = df, select = TRUE, method = "REML")
m_full1 <- gam(hourly_abundance ~ #s(PSUM, by = LED) +
#s(RH, by = LED) +
s(RSWR) +
#s(TA, by = LED) +
s(TSG, by = LED) +
s(VW, by = LED) +
s(Hour, k = 8) +
#s(day_of_year, bs = "re") +
#s(site, bs = "re") +
LED + site + (1|day_of_year)
, family = nb(link = "log"), data = df, select = TRUE, method = "REML")
m_full1 <- gam(hourly_abundance ~ #s(PSUM, by = LED) +
#s(RH, by = LED) +
s(RSWR) +
#s(TA, by = LED) +
s(TSG, by = LED) +
s(VW, by = LED) +
s(Hour, k = 8) +
#s(day_of_year, bs = "re") +
#s(site, bs = "re") +
LED + site + (1|factor(day_of_year))
, family = nb(link = "log"), data = df, select = TRUE, method = "REML")
m_full1 <- gam(hourly_abundance ~ #s(PSUM, by = LED) +
#s(RH, by = LED) +
s(RSWR) +
#s(TA, by = LED) +
s(TSG, by = LED) +
s(VW, by = LED) +
s(Hour, k = 8) +
#s(day_of_year, bs = "re") +
#s(site, bs = "re") +
LED + site + (1|factor(day_of_year))
, family = nb(link = "log"), data = df, select = TRUE, method = "REML")
m_full1 <- gam(hourly_abundance ~ #s(PSUM, by = LED) +
#s(RH, by = LED) +
s(RSWR) +
#s(TA, by = LED) +
s(TSG, by = LED) +
s(VW, by = LED) +
s(Hour, k = 8) +
s(day_of_year) +
#s(site, bs = "re") +
LED + site
, family = nb(link = "log"), data = df, select = TRUE, method = "REML")
summary(m_full1)
mgcv::gam.check(m_full1)
m_full1 <- gam(hourly_abundance ~ #s(PSUM, by = LED) +
#s(RH, by = LED) +
s(RSWR) +
#s(TA, by = LED) +
s(TSG, by = LED) +
s(VW, by = LED) +
s(Hour, k = 8) +
s(day_of_year, k = 20) +
#s(site, bs = "re") +
LED + site
, family = nb(link = "log"), data = df, select = TRUE, method = "REML")
summary(m_full1)
mgcv::gam.check(m_full1)
gam.check(m_full1)
m_full1 <- gam(hourly_abundance ~ #s(PSUM, by = LED) +
#s(RH, by = LED) +
s(RSWR) +
#s(TA, by = LED) +
s(TSG, by = LED) +
s(VW, by = LED) +
s(Hour, k = 8) +
s(day_of_year, k = 20, by = site) +
#s(site, bs = "re") +
LED + site
, family = nb(link = "log"), data = df, select = TRUE, method = "REML")
summary(m_full1)
gam.check(m_full1)
draw(m_full1)
m_full1 <- gam(hourly_abundance ~ #s(PSUM, by = LED) +
#s(RH, by = LED) +
s(RSWR) +
#s(TA, by = LED) +
s(TSG, by = LED) +
s(VW, by = LED) +
s(Hour, k = 8) +
s(day_of_year, k = 20, by = LED) +
#s(site, bs = "re") +
LED + site
, family = nb(link = "log"), data = df, select = TRUE, method = "REML")
gam.check(m_full1)
summary(m_full1)
draw(m_full1)
