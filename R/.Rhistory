classes_to_keep <- df_nils %>%
filter(!(Response %in% c("Correct", "Unsure"))) %>%  # Keep only relevant responses
distinct(class) %>%  # Get unique class values
pull(class)
classes_to_keep <- df_nils %>%
filter(Response %in% c("Correct", "Unsure")) %>%  # Keep only relevant responses
distinct(class) %>%  # Get unique class values
pull(class)
classes_to_drop <- df_nils %>%
filter(!class %in% classes_to_remove) %>%
distinct(class) %>%
pull(class)
classes_to_drop <- df_nils %>%
filter(!class %in% classes_to_keep) %>%
distinct(class) %>%
pull(class)
# 3. Count the occurrences of each class
class_counts_nils <- df_nils %>%
count(class)
View(df_nils)
library(dplyr)
library(stringr)
# 1. Read the CSV file into a data frame
df_nils <- read.csv("/Volumes/T7_Shield/Diopsis_Cameras/App_outputs/user_checked_predictions_29_01_25.csv")  # Replace with your actual file path
# 2. Extract the classes and orders from the 'filename' column
df_nils <- df_nils %>%
mutate(class = str_extract(Filename, "(?<=/)[^/]+(?=/[^/]+/[^/]+$)")) %>%
mutate(order = str_extract(Filename, "([^/]+)(?=/[^/]*$)"))
classes_to_keep <- df_nils %>%  # Classes that have at least one 'Correct' or 'Unsure' Response
filter(Response %in% c("Correct", "Unsure")) %>%
distinct(class) %>%  # Get unique class values
pull(class)
classes_to_drop <- df_nils %>%  # All classes that only have 'Incorrect' or 'Dirt' as Response
filter(!class %in% classes_to_keep) %>%
distinct(class) %>%
pull(class)
orders_to_keep <- df_nils %>%  # Orders that have at least one 'Correct' or 'Unsure' Response
filter(Response %in% c("Correct", "Unsure")) %>%
distinct(order) %>%  # Get unique order values
pull(order)
orders_to_drop <- df_nils %>%  # All orders that only have 'Incorrect' or 'Dirt' as Response
filter(!order %in% orders_to_keep) %>%
distinct(order) %>%
pull(order)
# 3. Count the occurrences of each class
class_counts_nils <- df_nils %>%
count(class)
order_counts_nils <- df_nils %>%
count(order)
response_percentage_class <- df_nils %>%
filter(class %in% classes_to_keep) %>%
group_by(class) %>%
mutate(total_in_class = n()) %>%  # Get total count per class
group_by(class, Response) %>%
summarise(count = n(), total_in_class = first(total_in_class), .groups = 'drop') %>%
mutate(percentage = (count / total_in_class) * 100)
View(response_percentage_class)
response_percentage_order <- df_nils %>%
filter(order %in% orders_to_keep) %>%
group_by(order) %>%
mutate(total_in_class = n()) %>%  # Get total count per class
group_by(order, Response) %>%
summarise(count = n(), total_in_class = first(total_in_class), .groups = 'drop') %>%
mutate(percentage = (count / total_in_class) * 100)
View(response_percentage_order)
response_count <- df_nils %>%
count(Response)
View(response_count)
response_count <- df_nils %>%
count(Response) %>%
mutate(Percent = n() / sum(n))
View(response_count)
response_count <- df_nils %>%
count(Response) %>%
mutate(Percent = n / sum(n) * 100)
View(response_count)
# 3. Count the occurrences of each class
class_counts_nils <- df_nils %>%
count(class) %>%
mutate(Percent = n / sum(n) * 100)
View(class_counts_nils)
library(dplyr)
library(stringr)
df <- read.csv("/Volumes/T7_Shield/Diopsis_Cameras/RESULTS_2024/2000_raw_images_unsorted/filtered_dinocheck_data.csv")
library(dplyr)
library(stringr)
# 1. Read the CSV file into a data frame
df_nils <- read.csv("/Volumes/T7_Shield/Diopsis_Cameras/App_outputs/user_checked_predictions_10_02_25.csv")  # Replace with your actual file path
# 1. Read the CSV file into a data frame
df_nils <- read.csv("/Volumes/Apollo/Diopsis_Cameras/App_outputs/user_checked_predictions_10_02_25.csv")  # Replace with your actual file path
library(dplyr)
library(stringr)
# 1. Read the CSV file into a data frame
df_nils <- read.csv("/Volumes/Apollo/Diopsis_Cameras/App_outputs/user_checked_predictions_10_02_25.csv")  # Replace with your actual file path
View(df_nils)
# 2. Extract the classes and orders from the 'filename' column
df_nils <- df_nils %>%
mutate(class = str_extract(Filename, "(?<=/)[^/]+(?=/[^/]+/[^/]+$)")) %>%
mutate(order = str_extract(Filename, "([^/]+)(?=/[^/]*$)"))
classes_to_keep <- df_nils %>%  # Classes that have at least one 'Correct' or 'Unsure' Response
filter(Response %in% c("Correct", "Unsure")) %>%
distinct(class) %>%  # Get unique class values
pull(class)
classes_to_drop <- df_nils %>%  # All classes that only have 'Incorrect' or 'Dirt' as Response
filter(!class %in% classes_to_keep) %>%
distinct(class) %>%
pull(class)
orders_to_keep <- df_nils %>%  # Orders that have at least one 'Correct' or 'Unsure' Response
filter(Response %in% c("Correct", "Unsure")) %>%
distinct(order) %>%  # Get unique order values
pull(order)
orders_to_drop <- df_nils %>%  # All orders that only have 'Incorrect' or 'Dirt' as Response
filter(!order %in% orders_to_keep) %>%
distinct(order) %>%
pull(order)
# 3. Count the occurrences of each class
class_counts_nils <- df_nils %>%
count(class) %>%
mutate(Percent = n / sum(n) * 100)
order_counts_nils <- df_nils %>%
count(order) %>%
mutate(Percent = n / sum(n) * 100)
View(order_counts_nils)
View(df_nils)
response_percentage <- df_nils %>%
count(Response) %>%
mutate(Percent = n / sum(n) * 100)
View(response_percentage)
View(df_nils)
per-class-precision_class <- df_nils %>%
group_by(class) %>%
filter(Response %in% c("Correct", "Incorrect", "Unsure")) %>%
mutate(total_in_class = n()) %>%
filter(Response %in% c("Correct")) %>%
mutate(TP = n()) %>%
mutate(per-class-precision = TP / total_in_class)
per-class-precision_class <- df_nils %>%
group_by(class) %>%
filter(Response %in% c("Correct", "Incorrect", "Unsure")) %>%
mutate(total_in_class = n()) %>%
filter(Response %in% c("Correct")) %>%
mutate(TP = n()) %>%
summarise(per-class-precision = TP / total_in_class)
per-class-precision_class <- df_nils %>%
group_by(class) %>%
filter(Response %in% c("Correct", "Incorrect", "Unsure")) %>%
mutate(total_in_class = n()) %>%
filter(Response %in% c("Correct")) %>%
mutate(TP = n()) %>%
summarise(per_class_precision = TP / total_in_class)
per-class-precision_class <- df_nils %>%
group_by(class) %>%
filter(Response %in% c("Correct", "Incorrect", "Unsure")) %>%
mutate(total_in_class = n()) %>%
filter(Response %in% c("Correct")) %>%
mutate(TP = n()) %>%
mutate(per_class_precision = TP / total_in_class)
per_class_precision <- df_nils %>%
group_by(class) %>%
filter(Response %in% c("Correct", "Incorrect", "Unsure")) %>%
mutate(total_in_class = n()) %>%  # Count total before filtering
filter(Response == "Correct") %>%
summarise(per_class_precision = n() / first(total_in_class))
View(per_class_precision)
per_class_precision <- df_nils %>%
group_by(class) %>%
filter(Response %in% c("Correct", "Incorrect", "Unsure")) %>%
mutate(total_in_class = n()) %>%  # Count total before summarizing
summarise(per_class_precision = sum(Response == "Correct") / first(total_in_class))
View(per_class_precision)
per-class-precision_order_filtered <- df_nils %>%
group_by(order) %>%
filter(Response %in% c("Correct", "Incorrect", "Unsure")) %>%
mutate(total_in_order = n()) %>%
filter(Response == "Correct") %>%
mutate(TP = n()) %>%
mutate(per_class_precision = TP / total_in_order)
per_class_precision_class_filtered <- df_nils %>%
group_by(class) %>%
filter(Response %in% c("Correct", "Incorrect", "Unsure")) %>%
mutate(total_in_class = n()) %>%  # Count total before filtering
filter(Response == "Correct") %>%
summarise(per_class_precision = n() / first(total_in_class))
per_class_precision_class_filtered <- df_nils %>%
group_by(class) %>%
filter(Response %in% c("Correct", "Incorrect", "Unsure")) %>%
mutate(total_in_class = n()) %>%  # Count total before filtering
filter(Response == "Correct") %>%
summarise(per_class_precision = n() / first(total_in_class))
per_class_precision_class <- df_nils %>%
group_by(class) %>%
filter(Response %in% c("Correct", "Incorrect", "Unsure")) %>%
mutate(total_in_class = n()) %>%  # Count total before summarizing
summarise(per_class_precision = sum(Response == "Correct") / first(total_in_class))
library(dplyr)
library(stringr)
# 1. Read the CSV file into a data frame
df_nils <- read.csv("/Volumes/Apollo/Diopsis_Cameras/App_outputs/user_checked_predictions_10_02_25.csv")  # Replace with your actual file path
per_class_precision_class_filtered <- df_nils %>%
group_by(class) %>%
filter(Response %in% c("Correct", "Incorrect", "Unsure")) %>%
mutate(total_in_class = n()) %>%  # Count total before filtering
filter(Response == "Correct") %>%
summarise(per_class_precision = n() / first(total_in_class))
# 2. Extract the classes and orders from the 'filename' column
df_nils <- df_nils %>%
mutate(class = str_extract(Filename, "(?<=/)[^/]+(?=/[^/]+/[^/]+$)")) %>%
mutate(order = str_extract(Filename, "([^/]+)(?=/[^/]*$)"))
per_class_precision_class_filtered <- df_nils %>%
group_by(class) %>%
filter(Response %in% c("Correct", "Incorrect", "Unsure")) %>%
mutate(total_in_class = n()) %>%  # Count total before filtering
filter(Response == "Correct") %>%
summarise(per_class_precision = n() / first(total_in_class))
per_class_precision_class <- df_nils %>%
group_by(class) %>%
filter(Response %in% c("Correct", "Incorrect", "Unsure")) %>%
mutate(total_in_class = n()) %>%  # Count total before summarizing
summarise(per_class_precision = sum(Response == "Correct") / first(total_in_class))
per_class_precision_order_filtered <- df_nils %>%
group_by(order) %>%
filter(Response %in% c("Correct", "Incorrect", "Unsure")) %>%
mutate(total_in_order = n()) %>%  # Count total before filtering
filter(Response == "Correct") %>%
summarise(per_class_precision = n() / first(total_in_order))
per_class_precision_order <- df_nils %>%
group_by(order) %>%
filter(Response %in% c("Correct", "Incorrect", "Unsure")) %>%
mutate(total_in_order = n()) %>%  # Count total before summarizing
summarise(per_class_precision = sum(Response == "Correct") / first(total_in_order))
View(per_class_precision_order_filtered)
View(per_class_precision_order)
View(per_class_precision_order_filtered)
View(per_class_precision_order)
diptera_precision_value <- per_class_precision_order %>%
filter(class == "Diptera") %>%
pull(per_class_precision)
diptera_precision_value <- per_class_precision_order %>%
filter(order == "Diptera") %>%
pull(per_class_precision)
hemiptera_precision_value <- per_class_precision_order %>%
filter(order == "Hemiptera") %>%
pull(per_class_precision)
Diptera_in_total <- 28450
Hemiptera_in_total <- 3911
diptera_precision_value <- per_class_precision_order %>%
filter(order == "Diptera") %>%
pull(per_class_precision)
hemiptera_precision_value <- per_class_precision_order %>%
filter(order == "Hemiptera") %>%
pull(per_class_precision)
estimated_TP_Diptera <- Diptera_in_total * diptera_precision_value
estimated_TP_Diptera <- round(Diptera_in_total * diptera_precision_value, 0)
estimated_TP_Hemiptera <- round(Hemiptera_in_total * Hemiptera_precision_value, 0)
estimated_TP_Hemiptera <- round(Hemiptera_in_total * hemiptera_precision_value, 0)
TP_rest <- df_nils %>%
filter(!order %in% c("Diptera", "Hemiptera")) %>%
sum(Response == "Correct")
TP_rest <- df_nils %>%
filter(!order %in% c("Diptera", "Hemiptera")) %>%
sum(Response == "Correct")
View(df_nils)
TP_rest <- df_nils %>%
filter(!order %in% c("Diptera", "Hemiptera")) #%>%
View(TP_rest)
TP_rest <- df_nils %>%
filter(!order %in% c("Diptera", "Hemiptera")) %>%
summarise(TP_rest = sum(Response == "Correct", na.rm = TRUE)) %>%
pull(TP_rest)
TP_total <- estimated_TP_Diptera + estimated_TP_Hemiptera + TP_rest
# Count all crops in the subfolders
root_folder <- "/Volumes/Apollo/Diopsis_Cameras/RESULTS_2024/all_crops/by_class_order"  # Change this to your actual path
# List all image files recursively
image_files <- list.files(root_folder, pattern = "\\.(jpg|jpeg|png|tif|tiff|bmp|gif)$",
recursive = TRUE, full.names = TRUE, ignore.case = TRUE)
# Count the total number of images
crops_total <- length(image_files)
# List all image files recursively
crops_total <- length(list.files(root_folder, pattern = "\\.(jpg|jpeg|png|tif|tiff|bmp|gif)$",
recursive = TRUE, full.names = TRUE, ignore.case = TRUE))
top1_accuracy <- TP_total / crops_total
top1_accuracy <- (TP_total / crops_total) * 100
labeled_as_dirt <- df_nils %>%
summarise(dirt = sum(Response == "Dirt", na.rm = TRUE)) %>%
pull(dirt)
dirt_percentage <- labeled_as_dirt / images_viewed_total
images_viewed_total <- length(df_nils)
images_viewed_total <- length(df_nils, axis = 1)
images_viewed_total <- nrows(df_nils)
images_viewed_total <- nrow(df_nils)
labeled_as_dirt <- df_nils %>%
summarise(dirt = sum(Response == "Dirt", na.rm = TRUE)) %>%
pull(dirt)
dirt_percentage <- labeled_as_dirt / images_viewed_total
crops_total <- crops_total - (crops_total*dirt_percentage)
crops_total <- round(crops_total - (crops_total*dirt_percentage), 0)
# Count all crops in the subfolders
root_folder <- "/Volumes/Apollo/Diopsis_Cameras/RESULTS_2024/all_crops/by_class_order"
crops_total <- length(list.files(root_folder, pattern = "\\.(jpg|jpeg|png|tif|tiff|bmp|gif)$",
recursive = TRUE, full.names = TRUE, ignore.case = TRUE))
estimated_dirt_total <- round(crops_total * dirt_percentage, 0)
crops_without_dirt <- crops_total - estimated_dirt_total # Excluding the images labeled as Dirt
top1_accuracy <- (TP_total / crops_without_dirt) * 100
View(per_class_precision_class_filtered)
View(per_class_precision_order_filtered)
# 3. Count the occurrences of each class
class_counts_nils <- df_nils %>%
count(class) %>%
mutate(Percent = n / sum(n) * 100)
order_counts_nils <- df_nils %>%
count(order) %>%
mutate(Percent = n / sum(n) * 100)
View(per_class_precision_order_filtered)
View(per_class_precision_class_filtered)
labeled_as_dirt_diptera <- df_nils %>%
filter(order == "Diptera") %>%
summarise(dirt = sum(Response == "Dirt", na.rm = TRUE)) %>%
pull(dirt)
Hemiptera_in_total <- 3911
labeled_as_dirt_hemiptera <- df_nils %>%
filter(order == "Hemiptera") %>%
summarise(dirt = sum(Response == "Dirt", na.rm = TRUE)) %>%
pull(dirt)
View(order_counts_nils)
sum_hemiptera_viewed <- order_counts_nils %>%
filter(order == "Hemiptera") %>%
pull(n)
sum_diptera_viewed <- order_counts_nils %>%
filter(order == "Diptera") %>%
pull(n)
labeled_as_dirt_diptera <- df_nils %>%
filter(order == "Diptera") %>%
summarise(dirt = sum(Response == "Dirt", na.rm = TRUE)) %>%
pull(dirt)
sum_diptera_viewed <- order_counts_nils %>%
filter(order == "Diptera") %>%
pull(n)
dirt_percentage_diptera <- labeled_as_dirt_diptera / sum_diptera_viewed
Diptera_in_total <- Diptera_in_total - round((dirt_percentage_diptera * Diptera_in_total), 0)
Diptera_in_total <- 28450
labeled_as_dirt_diptera <- df_nils %>%
filter(order == "Diptera") %>%
summarise(dirt = sum(Response == "Dirt", na.rm = TRUE)) %>%
pull(dirt)
sum_diptera_viewed <- order_counts_nils %>%
filter(order == "Diptera") %>%
pull(n)
dirt_percentage_diptera <- labeled_as_dirt_diptera / sum_diptera_viewed
Diptera_in_total <- Diptera_in_total - round((dirt_percentage_diptera * Diptera_in_total), 0)
Hemiptera_in_total <- 3911
labeled_as_dirt_hemiptera <- df_nils %>%
filter(order == "Hemiptera") %>%
summarise(dirt = sum(Response == "Dirt", na.rm = TRUE)) %>%
pull(dirt)
sum_hemiptera_viewed <- order_counts_nils %>%
filter(order == "Hemiptera") %>%
pull(n)
dirt_percentage_hemiptera <- labeled_as_dirt_hemiptera / sum_hemiptera_viewed
Hemiptera_in_total <- Hemiptera_in_total - round((Hemiptera_in_total * dirt_percentage_hemiptera), 0)
images_viewed_total <- nrow(df_nils)
diptera_precision_value <- per_class_precision_order %>%
filter(order == "Diptera") %>%
pull(per_class_precision)
hemiptera_precision_value <- per_class_precision_order %>%
filter(order == "Hemiptera") %>%
pull(per_class_precision)
estimated_TP_Diptera <- round(Diptera_in_total * diptera_precision_value, 0)
estimated_TP_Hemiptera <- round(Hemiptera_in_total * hemiptera_precision_value, 0)
TP_rest <- df_nils %>%
filter(!order %in% c("Diptera", "Hemiptera")) %>%
summarise(TP_rest = sum(Response == "Correct", na.rm = TRUE)) %>%
pull(TP_rest)
TP_total <- estimated_TP_Diptera + estimated_TP_Hemiptera + TP_rest
labeled_as_dirt <- df_nils %>%
summarise(dirt = sum(Response == "Dirt", na.rm = TRUE)) %>%
pull(dirt)
dirt_percentage <- labeled_as_dirt / images_viewed_total
# Count all crops in the subfolders
root_folder <- "/Volumes/Apollo/Diopsis_Cameras/RESULTS_2024/all_crops/by_class_order"
crops_total <- length(list.files(root_folder, pattern = "\\.(jpg|jpeg|png|tif|tiff|bmp|gif)$",
recursive = TRUE, full.names = TRUE, ignore.case = TRUE))
estimated_dirt_total <- round(crops_total * dirt_percentage, 0)
crops_without_dirt <- crops_total - estimated_dirt_total # Excluding the images labeled as Dirt
top1_accuracy <- (TP_total / crops_without_dirt) * 100
order_counts_nils <- df_nils %>%
count(order) %>%
mutate(Percent = n / sum(n) * 100)
View(order_counts_nils)
View(per_class_precision_order)
library(dplyr)
library(stringr)
df <- read.csv("/Volumes/Apollo/Diopsis_Cameras/RESULTS_2024/2000_raw_images_unsorted/filtered_dinocheck_data.csv")
mAP <- mean(df$AP)
TP <- sum(df$TP)
FP <- sum(df$FP)
FN <- sum(df$FN)
precision_025 <- TP / (TP + FP)
recall_025 <- TP / (TP + FN)
F1_025 <- (2 * precision_025 * recall_025) / (precision_025 + recall_025)
library(dplyr)
library(stringr)
df <- read.csv("/Volumes/Apollo/Diopsis_Cameras/RESULTS_2024/result_csvs/Arise_results/arise_performance_results.csv")
TP <- sum(df$TP)
FP <- sum(df$FP)
library(dplyr)
library(stringr)
df <- read.csv("/Volumes/Apollo/Diopsis_Cameras/RESULTS_2024/result_csvs/Arise_results/arise_performance_results.csv")
TP <- sum(df$TP)
FP <- sum(df$FP)
FN <- sum(df$FN)
TGT <- TP + FN
precision <- TP / (TP + FP)
recall <- TP / (TP + FN)
F1 <- (2 * precision_025 * recall_025) / (precision_025 + recall_025)
F1 <- (2 * precision * recall) / (precision + recall)
precision <- round(TP / (TP + FP), 4)
recall <- round(TP / (TP + FN), 4)
View(df)
library(dplyr)
library(stringr)
df <- read.csv("/Volumes/Apollo/Diopsis_Cameras/RESULTS_2024/result_csvs/Arise_results/arise_performance_results.csv")
df_02IoU <- read.csv("/Volumes/Apollo/Diopsis_Cameras/RESULTS_2024/result_csvs/Arise_results/arise_performance_results_02IoU.csv")
# 0.2 IoU
TP_02IoU <- sum(df_02IoU$TP)
FP_02IoU <- sum(df_02IoU$FP)
FN_02IoU <- sum(df_02IoU$FN)
TGT_02IoU <- TP_02IoU + FN_02IoU
precision_02IoU <- round(TP_02IoU / (TP_02IoU + FP_02IoU), 4)
recall_02IoU <- round(TP_02IoU / (TP_02IoU + FN_02IoU), 4)
F1_02IoU <- (2 * precision_02IoU * recall_02IoU) / (precision_02IoU + recall_02IoU)
library(dplyr)
library(stringr)
df <- read.csv("/Volumes/Apollo/Diopsis_Cameras/RESULTS_2024/result_csvs/Arise_results/arise_performance_results.csv")
df_02IoU <- read.csv("/Volumes/Apollo/Diopsis_Cameras/RESULTS_2024/result_csvs/Arise_results/arise_performance_results_02IoU.csv")
TP <- sum(df$TP)
FP <- sum(df$FP)
FN <- sum(df$FN)
TGT <- TP + FN
precision <- round(TP / (TP + FP), 4)
recall <- round(TP / (TP + FN), 4)
F1 <- (2 * precision * recall) / (precision + recall)
# 0.2 IoU
TP_02IoU <- sum(df_02IoU$TP)
FP_02IoU <- sum(df_02IoU$FP)
FN_02IoU <- sum(df_02IoU$FN)
TGT_02IoU <- TP_02IoU + FN_02IoU
precision_02IoU <- round(TP_02IoU / (TP_02IoU + FP_02IoU), 4)
recall_02IoU <- round(TP_02IoU / (TP_02IoU + FN_02IoU), 4)
F1_02IoU <- (2 * precision_02IoU * recall_02IoU) / (precision_02IoU + recall_02IoU)
library(dplyr)
library(stringr)
df <- read.csv("/Volumes/Apollo/Diopsis_Cameras/RESULTS_2024/result_csvs/Arise_results/arise_performance_results.csv")
df_02IoU <- read.csv("/Volumes/Apollo/Diopsis_Cameras/RESULTS_2024/result_csvs/Arise_results/arise_performance_results_02IoU.csv")
TP <- sum(df$TP)
FP <- sum(df$FP)
FN <- sum(df$FN)
TGT <- TP + FN
precision <- round(TP / (TP + FP), 4)
recall <- round(TP / (TP + FN), 4)
F1 <- (2 * precision * recall) / (precision + recall)
# 0.2 IoU
TP_02IoU <- sum(df_02IoU$TP)
FP_02IoU <- sum(df_02IoU$FP)
FN_02IoU <- sum(df_02IoU$FN)
TGT_02IoU <- TP_02IoU + FN_02IoU
precision_02IoU <- round(TP_02IoU / (TP_02IoU + FP_02IoU), 4)
recall_02IoU <- round(TP_02IoU / (TP_02IoU + FN_02IoU), 4)
F1_02IoU <- (2 * precision_02IoU * recall_02IoU) / (precision_02IoU + recall_02IoU)
library(dplyr)
library(stringr)
# 1. Read the CSV file into a data frame
df_nils <- read.csv("/Volumes/Apollo/Diopsis_Cameras/App_outputs/user_checked_predictions_10_02_25.csv")  # Replace with your actual file path
# 2. Extract the classes and orders from the 'filename' column
df_nils <- df_nils %>%
mutate(class = str_extract(Filename, "(?<=/)[^/]+(?=/[^/]+/[^/]+$)")) %>%
mutate(order = str_extract(Filename, "([^/]+)(?=/[^/]*$)"))
classes_to_keep <- df_nils %>%  # Classes that have at least one 'Correct' or 'Unsure' Response
filter(Response %in% c("Correct", "Unsure")) %>%
distinct(class) %>%  # Get unique class values
pull(class)
classes_to_drop <- df_nils %>%  # All classes that only have 'Incorrect' or 'Dirt' as Response
filter(!class %in% classes_to_keep) %>%
distinct(class) %>%
pull(class)
orders_to_keep <- df_nils %>%  # Orders that have at least one 'Correct' or 'Unsure' Response
filter(Response %in% c("Correct", "Unsure")) %>%
distinct(order) %>%  # Get unique order values
pull(order)
orders_to_drop <- df_nils %>%  # All orders that only have 'Incorrect' or 'Dirt' as Response
filter(!order %in% orders_to_keep) %>%
distinct(order) %>%
pull(order)
images_viewed_total <- nrow(df_nils)
crops_without_dirt <- crops_total - estimated_dirt_total # Excluding the images labeled as Dirt
crops_total <- length(list.files(root_folder, pattern = "\\.(jpg|jpeg|png|tif|tiff|bmp|gif)$",
recursive = TRUE, full.names = TRUE, ignore.case = TRUE))
# Count all crops in the subfolders
root_folder <- "/Volumes/Apollo/Diopsis_Cameras/RESULTS_2024/all_crops/by_class_order"
crops_total <- length(list.files(root_folder, pattern = "\\.(jpg|jpeg|png|tif|tiff|bmp|gif)$",
recursive = TRUE, full.names = TRUE, ignore.case = TRUE))
estimated_dirt_total <- round(crops_total * dirt_percentage, 0)
dirt_percentage <- labeled_as_dirt / images_viewed_total
labeled_as_dirt <- df_nils %>%
summarise(dirt = sum(Response == "Dirt", na.rm = TRUE)) %>%
pull(dirt)
dirt_percentage <- labeled_as_dirt / images_viewed_total
# Count all crops in the subfolders
root_folder <- "/Volumes/Apollo/Diopsis_Cameras/RESULTS_2024/all_crops/by_class_order"
crops_total <- length(list.files(root_folder, pattern = "\\.(jpg|jpeg|png|tif|tiff|bmp|gif)$",
recursive = TRUE, full.names = TRUE, ignore.case = TRUE))
estimated_dirt_total <- round(crops_total * dirt_percentage, 0)
crops_without_dirt <- crops_total - estimated_dirt_total # Excluding the images labeled as Dirt
